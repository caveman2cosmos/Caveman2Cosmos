#pragma once
#include "CvGameCoreDLL.h"
#include <string>

#define SLABEL(name,val) (std::string)(name + ">" + val + "?")
#define OLABEL(name,val) name << ">" << val << "?"

#define CSTR(x) x.c_str()

#define ICONKEY "icon"

#define FILEFOOTER "\n\n## File automatically generated by Caveman2Cosmos for RPC Integration. Will be deleted after closing civ4 or disabling RPC in Game Settings. ##"

#define GIVEDEFAULTRPCVALS(rpc) rpc.turn = -1; rpc.playersAlive = -1; rpc.playersTotal = -1; rpc.startTime = -1; rpc.clientID = ""; rpc.iconKey = ""; rpc.date = "";

#define CHECKDELTA 5 // In seconds, exe may update more often but meh

struct RPCDATA {
	int turn;
	int playersAlive;
	int playersTotal;
	std::string date;
	time_t startTime;
	std::string clientID;
	std::string iconKey;
};

class C_DiscordRPCCommunication {
public:
	C_DiscordRPCCommunication(std::string);
	~C_DiscordRPCCommunication();

	BOOL		sendNewRpcDetails(RPCDATA);
	void		updateRPC();
	BOOL		getCurrentState();
	void		ensureDiscordRPCState();

private:

	BOOL		bootRPC(std::string);
	BOOL		exitRPC();

	RPCDATA		m_sRpcData;
	std::string m_sDiscordRPCPath;
	time_t		m_tLastUpdate;
	bool		m_bState;
	bool		m_bBUGLoadedOptions;
};

extern C_DiscordRPCCommunication* pDiscord;

void ensureDiscordRPCState();

extern std::string discordWorkDirectory;