## RevolutionDCM Mod Code
##
## This code uses the BUG standard to control RevolutionDCM options.
## RevolutionDCM.ini is generated by BUG and is the repository of all option states.
## Options are passed to the SDK via python calls that modify GlobalDefinesAlt.xml.
## Note:
## This code will only alter values in GlobalDefinesAlt.xml that have
## been defined in /Assets/Config/RevDCM.xml. Other values in GlobalDefinesAlt
## may be changed manually as per usual. Values that have been defined in RevDCM.xml
## may also be manually changed, but will be overwritten by this code either on
## new turns or on game load or game initialisation.
##
## Copyright (c) 2007-2008 The BUG Mod.
##
## Author: Glider1

from CvPythonExtensions import *
import BugOptions
import BugCore
# Globals
GC = CyGlobalContext()
RevDCMOpt = BugCore.game.RevDCM

class RevDCM:
	def __init__(self, eventManager):
		eventManager.addEventHandler("OnLoad", self.onLoadGame)
		eventManager.addEventHandler("GameStart", self.onGameStart)

	def onLoadGame(self,argsList):
		self.optionUpdate()

	def onGameStart(self,argsList):
		self.optionUpdate()

	def optionUpdate(self):
		if GC.getGame().isNetworkMultiPlayer() or RevDCMOpt.isReset():
			resetOptions()
		else:
			setXMLOptionsfromIniFile()


################################################
# Module level functions defined in RevDCM.xml #
################################################

def changedReset (option, value):
	resetOptions()
	return True

#######################################################################
# Functions that change the SDK variable states in global alt defines #
#######################################################################

#DCM
def changedDCM_RANGE_BOMBARD (option, value):
	GC.setDefineINT("DCM_RANGE_BOMBARD", RevDCMOpt.isDCM_RANGE_BOMBARD())
def changedDCM_ATTACK_SUPPORT (option, value):
	GC.setDefineINT("DCM_ATTACK_SUPPORT", RevDCMOpt.isDCM_ATTACK_SUPPORT())
def changedDCM_OPP_FIRE (option, value):
	GC.setDefineINT("DCM_OPP_FIRE", RevDCMOpt.isDCM_OPP_FIRE())
def changedDCM_AIR_BOMBING (option, value):
	GC.setDefineINT("DCM_AIR_BOMBING", RevDCMOpt.isDCM_AIR_BOMBING())
def changedDCM_ACTIVE_DEFENSE (option, value):
	GC.setDefineINT("DCM_ACTIVE_DEFENSE", RevDCMOpt.isDCM_ACTIVE_DEFENSE())
def changedDCM_FIGHTER_ENGAGE (option, value):
	GC.setDefineINT("DCM_FIGHTER_ENGAGE", RevDCMOpt.isDCM_FIGHTER_ENGAGE())

#IDW
def changedIDW_ENABLED (option, value):
	GC.setDefineINT("IDW_ENABLED", RevDCMOpt.isIDW_ENABLED())
def changedIDW_EMERGENCY_DRAFT_ENABLED (option, value):
	GC.setDefineINT("IDW_EMERGENCY_DRAFT_ENABLED", RevDCMOpt.isIDW_EMERGENCY_DRAFT_ENABLED())
def changedIDW_NO_BARBARIAN_INFLUENCE (option, value):
	GC.setDefineINT("IDW_NO_BARBARIAN_INFLUENCE", RevDCMOpt.isIDW_NO_BARBARIAN_INFLUENCE())
def changedIDW_NO_NAVAL_INFLUENCE (option, value):
	GC.setDefineINT("IDW_NO_NAVAL_INFLUENCE", RevDCMOpt.isIDW_NO_NAVAL_INFLUENCE())
def changedIDW_PILLAGE_INFLUENCE_ENABLED (option, value):
	GC.setDefineINT("IDW_PILLAGE_INFLUENCE_ENABLED", RevDCMOpt.isIDW_PILLAGE_INFLUENCE_ENABLED())

#SS
def changedSS_ENABLED (option, value):
	GC.setDefineINT("SS_ENABLED", RevDCMOpt.isSS_ENABLED())
def changedSS_BRIBE (option, value):
	GC.setDefineINT("SS_BRIBE", RevDCMOpt.isSS_BRIBE())
def changedSS_ASSASSINATE (option, value):
	GC.setDefineINT("SS_ASSASSINATE", RevDCMOpt.isSS_ASSASSINATE())

#Religion
def changedOC_RESPAWN_HOLY_CITIES (option, value):
	GC.setDefineINT("OC_RESPAWN_HOLY_CITIES", RevDCMOpt.isOC_RESPAWN_HOLY_CITIES())
def changedLIMITED_RELIGIONS_EXCEPTIONS (option, value):
	GC.setDefineINT("LIMITED_RELIGIONS_EXCEPTIONS", RevDCMOpt.isLIMITED_RELIGIONS_EXCEPTIONS())

#Hidden Attitude
def changedHiddenAttitude(option, value):
	GC.setDefineINT("SHOW_HIDDEN_ATTITUDE", RevDCMOpt.isHiddenAttitude())


def setXMLOptionsfromIniFile():
	print "Reinitialising RevDCM SDK variables"
	#DCM
	GC.setDefineINT("DCM_RANGE_BOMBARD", RevDCMOpt.isDCM_RANGE_BOMBARD())
	GC.setDefineINT("DCM_ATTACK_SUPPORT", RevDCMOpt.isDCM_ATTACK_SUPPORT())
	GC.setDefineINT("DCM_OPP_FIRE", RevDCMOpt.isDCM_OPP_FIRE())
	GC.setDefineINT("DCM_AIR_BOMBING", RevDCMOpt.isDCM_AIR_BOMBING())
	GC.setDefineINT("DCM_ACTIVE_DEFENSE", RevDCMOpt.isDCM_ACTIVE_DEFENSE())
	GC.setDefineINT("DCM_FIGHTER_ENGAGE", RevDCMOpt.isDCM_FIGHTER_ENGAGE())
	#IDW
	GC.setDefineINT("IDW_ENABLED", RevDCMOpt.isIDW_ENABLED())
	GC.setDefineINT("IDW_EMERGENCY_DRAFT_ENABLED", RevDCMOpt.isIDW_EMERGENCY_DRAFT_ENABLED())
	GC.setDefineINT("IDW_NO_BARBARIAN_INFLUENCE", RevDCMOpt.isIDW_NO_BARBARIAN_INFLUENCE())
	GC.setDefineINT("IDW_NO_NAVAL_INFLUENCE", RevDCMOpt.isIDW_NO_NAVAL_INFLUENCE())
	GC.setDefineINT("IDW_PILLAGE_INFLUENCE_ENABLED", RevDCMOpt.isIDW_PILLAGE_INFLUENCE_ENABLED())
	#SS
	GC.setDefineINT("SS_ENABLED", RevDCMOpt.isSS_ENABLED())
	GC.setDefineINT("SS_BRIBE", RevDCMOpt.isSS_BRIBE())
	GC.setDefineINT("SS_ASSASSINATE", RevDCMOpt.isSS_ASSASSINATE())
	#Religion
	GC.setDefineINT("OC_RESPAWN_HOLY_CITIES", RevDCMOpt.isOC_RESPAWN_HOLY_CITIES())
	GC.setDefineINT("LIMITED_RELIGIONS_EXCEPTIONS", 0)
	#Hidden Attitude
	GC.setDefineINT("SHOW_HIDDEN_ATTITUDE", RevDCMOpt.isHiddenAttitude())

def resetOptions():
	revDCMoptions = BugOptions.getOptions("RevDCM").options
	RevolutionOptions = BugOptions.getOptions("Revolution").options
	ActionOptions = BugOptions.getOptions("Actions").options
	for i in range(len(revDCMoptions)):
		revDCMoptions[i].resetValue()
	for i in range(len(RevolutionOptions)):
		RevolutionOptions[i].resetValue()
	for i in range(len(ActionOptions)):
		ActionOptions[i].resetValue()

	setXMLOptionsfromIniFile()
	RevDCMOpt.setReset(False)
